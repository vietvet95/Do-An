/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ConnectionDB;
import controller.EmployeeController;
import controller.EncryptPassword;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import static java.time.temporal.ChronoUnit.DAYS;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Employee;

/**
 *
 * @author hoang
 */
public class JPanelEmployee extends javax.swing.JPanel {

    /**
     * Creates new form employee
     */
    EncryptPassword ep = new EncryptPassword();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    List<Employee> listEmployee = controller.EmployeeController.layDanhSachTatCaNhanVien();

    public JPanelEmployee() throws SQLException, ClassNotFoundException {
        initComponents();
        showDuLieu();
        jTableEmployee.setShowVerticalLines(true);
        jTableEmployee.setRowHeight(30);
        jTableEmployee.setShowGrid(true);//viền table
        jTableEmployee.setGridColor(Color.gray);//màu viền table
        jTableEmployee.setSelectionBackground(new Color(118, 93, 105));//màu khi kích chuột vào từng hàng của table
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldAddress = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldPhone = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldID = new javax.swing.JTextField();
        jCheckBoxMale = new javax.swing.JCheckBox();
        jCheckBoxFemale = new javax.swing.JCheckBox();
        jCheckBoxOther = new javax.swing.JCheckBox();
        jDateChooserBirthday = new com.toedter.calendar.JDateChooser();
        jDateChooserDayAtWork = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxPosition = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldPassword = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEmployee = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButtonadd = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jLabel9.setText("Nhập họ tên hoặc mã nhân viên để tìm kiếm:");

        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField6KeyReleased(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 255), 3, true), "Thông Tin Nhân Viên", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 3, 18), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(0, 204, 255));
        jPanel1.setVerifyInputWhenFocusTarget(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 0, 153));
        jLabel7.setText("Email:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 153));
        jLabel4.setText("Giới Tính:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 153));
        jLabel1.setText("Mã Nhân Viên:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 153));
        jLabel3.setText("Ngày Sinh:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 0, 153));
        jLabel6.setText("Địa Chỉ:");

        jTextFieldPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPhoneActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 0, 153));
        jLabel8.setText("Ngày Vào Làm:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 153));
        jLabel5.setText("Số Điện Thoại:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 0, 153));
        jLabel10.setText("Họ Tên");

        jCheckBoxMale.setBackground(new java.awt.Color(0, 204, 0));
        jCheckBoxMale.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxMale.setText("Nam");
        jCheckBoxMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMaleActionPerformed(evt);
            }
        });

        jCheckBoxFemale.setBackground(new java.awt.Color(255, 153, 153));
        jCheckBoxFemale.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxFemale.setText("Nữ");
        jCheckBoxFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFemaleActionPerformed(evt);
            }
        });

        jCheckBoxOther.setBackground(new java.awt.Color(255, 0, 255));
        jCheckBoxOther.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxOther.setText("Khác");
        jCheckBoxOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxOtherActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 0, 153));
        jLabel11.setText("Quyền hạn");

        jComboBoxPosition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Quản Lý", "Thu Ngân", "Nhân viên" }));
        jComboBoxPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPositionActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 0, 153));
        jLabel12.setText("Password");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextFieldPhone, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jDateChooserDayAtWork, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBoxMale)
                                .addGap(14, 14, 14)
                                .addComponent(jCheckBoxFemale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBoxOther)
                                .addContainerGap(9, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextFieldPassword, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxPosition, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldID, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldName)
                                    .addComponent(jDateChooserBirthday, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(10, 10, 10))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jComboBoxPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jCheckBoxMale)
                    .addComponent(jCheckBoxFemale)
                    .addComponent(jCheckBoxOther))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserDayAtWork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTableEmployee.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 255), 3));
        jTableEmployee.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jTableEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableEmployee);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 255), 3), "Chức Năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 18), new java.awt.Color(0, 51, 255))); // NOI18N

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add-icon.png"))); // NOI18N
        jButton1.setText("Thêm");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh_24.png"))); // NOI18N
        jButton2.setText("Làm mới");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setMaximumSize(new java.awt.Dimension(95, 25));
        jButton2.setMinimumSize(new java.awt.Dimension(95, 25));
        jButton2.setPreferredSize(new java.awt.Dimension(95, 25));

        jButtonadd.setBackground(new java.awt.Color(204, 204, 255));
        jButtonadd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonadd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        jButtonadd.setText("Chỉnh sửa");
        jButtonadd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaddActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(204, 204, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/khong_hop_le2.png"))); // NOI18N
        jButton5.setText(" Xóa");
        jButton5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonadd, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonadd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 66, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 960, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMaleActionPerformed
        // TODO add your handling code here:
        jCheckBoxFemale.setSelected(false);
        jCheckBoxOther.setSelected(false);
    }//GEN-LAST:event_jCheckBoxMaleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            insertEmployee();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JPanelEmployee.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(JPanelEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaddActionPerformed
        // TODO add your handling code here:
         int index = jComboBoxPosition.getSelectedIndex();
        int row = jTableEmployee.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn nhân viên nào!");
        } else {
            try {
                Connection cnn = ConnectionDB.getConnection();
                String value = (jTableEmployee.getModel().getValueAt(row, 0).toString());
                String query = "UPDATE Employee SET EmpName =? ,PositionID=?,EmpBirthday=?,EmpGender=?,EmpPhoneNumber=?,EmpAddress=?,EmpEmail=?,EmpDayAtWork=? WHERE EmpID=?";
                PreparedStatement ps = cnn.prepareStatement(query);
                ps.setString(1, jTextFieldName.getText());
                if (index==0) {
                    ps.setString(2, "P01");
                }else if(index==1){
                    ps.setString(2, "P02");
                }else{
                    ps.setString(2, "P03");
                }
                ps.setString(3, dateFormat.format(jDateChooserBirthday.getDate()));
                if (jCheckBoxMale.isSelected()) {
                    ps.setString(4, "Male");
                } else if (jCheckBoxFemale.isSelected()) {
                    ps.setString(4, "Female");
                } else {
                    ps.setString(4, "third gender");
                }
                ps.setString(5, jTextFieldPhone.getText());
                ps.setString(6, jTextFieldAddress.getText());
                ps.setString(7, jTextFieldEmail.getText());
                ps.setString(8, dateFormat.format(jDateChooserDayAtWork.getDate()));
                ps.setString(9, value);
                ps.executeUpdate();
                try {
                    showDuLieu();
                    JOptionPane.showMessageDialog(null, "cập nhật thành công!");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(JPanelEmployee.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (SQLException ex) {
                Logger.getLogger(JPanelEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonaddActionPerformed

    private void jTextFieldPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPhoneActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int rs = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa!");
        if (rs == 0) {
            try {
                int position = jTableEmployee.getSelectedRow();
                String data = jTableEmployee.getModel().getValueAt(position, 0).toString();
                Connection cnn = ConnectionDB.getConnection();
                String query = "DELETE FROM Employee WHERE EmpID = ?";
                PreparedStatement ps = cnn.prepareStatement(query);
                ps.setString(1, data);
                ps.executeUpdate();
                showDuLieu();
                ConnectionDB.closeConnection(cnn);
                JOptionPane.showMessageDialog(null, "Xóa thành công!");
            } catch (SQLException ex) {
                ex.printStackTrace();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(JPanelEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBoxPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPositionActionPerformed
        // TODO add your handling code here:
        switch (jComboBoxPosition.getSelectedItem().toString()) {
            case "Quản Lý":
                jTextFieldPassword.setEditable(true);
                break;
            case "Thu Ngân":
                jTextFieldPassword.setEditable(true);
                break;
            default:
                jTextFieldPassword.setEditable(false);
                break;
        }
    }//GEN-LAST:event_jComboBoxPositionActionPerformed

    private void jCheckBoxFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFemaleActionPerformed
        // TODO add your handling code here:
        jCheckBoxMale.setSelected(false);
        jCheckBoxOther.setSelected(false);
    }//GEN-LAST:event_jCheckBoxFemaleActionPerformed

    private void jCheckBoxOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxOtherActionPerformed
        // TODO add your handling code here:
        jCheckBoxMale.setSelected(false);
        jCheckBoxFemale.setSelected(false);
    }//GEN-LAST:event_jCheckBoxOtherActionPerformed

    private void jTableEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEmployeeMouseClicked
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            jTextFieldPassword.setText("");
            int i = jTableEmployee.getSelectedRow();
            TableModel model = jTableEmployee.getModel();
            jTextFieldID.setText(model.getValueAt(i, 0).toString());
            jTextFieldName.setText(model.getValueAt(i, 1).toString());
            if (model.getValueAt(i, 2).toString().equals("Quản Lý")) {
                jComboBoxPosition.setSelectedIndex(0);
            } else if (model.getValueAt(i, 2).toString().equals("Thu Ngân")) {
                jComboBoxPosition.setSelectedIndex(1);
            } else {
                jComboBoxPosition.setSelectedIndex(2);
            }
            String d1 = model.getValueAt(i, 3).toString();
            String d2 = model.getValueAt(i, 8).toString();
            Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(d1);
            Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(d2);
            jDateChooserBirthday.setDate(date1);
            jDateChooserDayAtWork.setDate(date2);
            String gender = model.getValueAt(i, 4).toString();
            if (gender.equals("Male")) {
                jCheckBoxMale.setSelected(true);
                jCheckBoxFemale.setSelected(false);
                jCheckBoxOther.setSelected(false);
            } else if (gender.equals("Female")) {
                jCheckBoxFemale.setSelected(true);
                jCheckBoxMale.setSelected(false);
                jCheckBoxOther.setSelected(false);
            } else {
                jCheckBoxOther.setSelected(true);
                jCheckBoxFemale.setSelected(false);
                jCheckBoxMale.setSelected(false);
            }
            jTextFieldPhone.setText(model.getValueAt(i, 5).toString());
            jTextFieldAddress.setText(model.getValueAt(i, 6).toString());
            jTextFieldEmail.setText(model.getValueAt(i, 7).toString());
        } catch (ParseException ex) {
            Logger.getLogger(JPanelEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableEmployeeMouseClicked

    private void jTextField6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyReleased
        // TODO add your handling code here:
        jTableEmployee.setModel(new DefaultTableModel(null, new Object[]{"Mã NV", "Họ Tên", "Quyền hạn", "Ngày sinh", "Giới tính", "Số Điện Thoại", "Địa Chỉ", "email", "Ngày Vào Làm"}));
        EmployeeController.findNhanVien(jTableEmployee, jTextField6.getText());
    }//GEN-LAST:event_jTextField6KeyReleased
    private void showDuLieu() throws SQLException, ClassNotFoundException {
        jTableEmployee.removeAll();
        String[] arr = {"Mã NV", "Họ Tên", "Quyền hạn", "Ngày sinh", "Giới tính", "Số Điện Thoại", "Địa Chỉ", "email", "Ngày Vào Làm"};
        DefaultTableModel model = new DefaultTableModel(arr, 0);
        String query = "select empID,empName,PositionName, EmpBirthday,EmpGender,EmpPhoneNumber,EmpAddress,EmpEmail,EmpDayAtWork from Position a , employee b where a.positionid=b.positionid";
        Connection connection = ConnectionDB.getConnection();
        PreparedStatement ps = connection.prepareStatement(query);
        ResultSet rs = ps.executeQuery();
        while (rs.next()) {
            Vector vector = new Vector();
            vector.add(rs.getString("empID"));
            vector.add(rs.getString("empName"));
            vector.add(rs.getString("PositionName"));
            vector.add(rs.getDate("EmpBirthday"));
            vector.add(rs.getString("EmpGender"));
            vector.add(rs.getString("EmpPhoneNumber"));
            vector.add(rs.getString("EmpAddress"));
            vector.add(rs.getString("EmpEmail"));
            vector.add(rs.getDate("EmpDayAtWork"));
            model.addRow(vector);
        }
        jTableEmployee.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonadd;
    private javax.swing.JCheckBox jCheckBoxFemale;
    private javax.swing.JCheckBox jCheckBoxMale;
    private javax.swing.JCheckBox jCheckBoxOther;
    private javax.swing.JComboBox jComboBoxPosition;
    private com.toedter.calendar.JDateChooser jDateChooserBirthday;
    private com.toedter.calendar.JDateChooser jDateChooserDayAtWork;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEmployee;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextFieldAddress;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPassword;
    private javax.swing.JTextField jTextFieldPhone;
    // End of variables declaration//GEN-END:variables

    private boolean checkTrungMaNV() {
        try {
            Connection cnn = ConnectionDB.getConnection();
            String query = "SELECT * FROM Employee WHERE EmpID = ?";
            PreparedStatement ps = cnn.prepareStatement(query);
            ps.setString(1, jTextFieldID.getText());
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                return true;
            }
            ConnectionDB.closeConnection(cnn);
        } catch (SQLException ex) {
            Logger.getLogger(JPanelEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    private void insertEmployee() throws ClassNotFoundException, ParseException {
        boolean b1 = jTextFieldID.getText().equals("");
        boolean b2 = jTextFieldName.getText().equals("");
        boolean b3 = jTextFieldPhone.getText().equals("");
        boolean b4 = jTextFieldAddress.getText().equals("");
        boolean b5 = jTextFieldEmail.getText().equals("");
        if (b1 || b2 || b3 || b4 || b5 == true) {
            JOptionPane.showMessageDialog(null, "Bạn phải nhập đầy đủ thông tin!");
        } else if (jTextFieldPhone.getText().matches("(\\+84|0)\\d{9,10}") == false) {
            JOptionPane.showMessageDialog(null, "Số điện thoại không đúng định dạng!");
            jTextFieldPhone.requestFocus();
            return;
        } else if (checkTrungMaNV() == true) {
            JOptionPane.showMessageDialog(null, "Mã nhân viên đã tồn tại!");
            jTextFieldID.requestFocus();
            return;
        }else if(!checkBirth()){
            JOptionPane.showMessageDialog(null, "Nhân viên phải đủ 18 tuổi");
        }else {
            try {
                Connection cnn = ConnectionDB.getConnection();
                String query = "INSERT INTO Employee (EmpID,EmpName,EmpPass,PositionID,EmpBirthday,EmpGender,EmpPhoneNumber,EmpAddress,EmpEmail,EmpDayAtWork)"
                        + "VALUES(?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement ps = cnn.prepareStatement(query);
                ps.setString(1, jTextFieldID.getText());
                ps.setString(2, jTextFieldName.getText());
                if (!jTextFieldAddress.isEnabled()) {
                    ps.setString(3, null);
                } else {
                    ps.setString(3,ep.encryptmd5(jTextFieldPassword.getText()));
                }

                switch (jComboBoxPosition.getSelectedItem().toString()) {
                    case "Quản Lý":
                        ps.setString(4, "P01");
                        break;
                    case "Thu Ngân":
                        ps.setString(4, "P02");
                        break;
                    default:
                        ps.setString(4, "P03");
                        break;
                }
                ps.setString(5, dateFormat.format(jDateChooserBirthday.getDate()));

                if (jCheckBoxMale.isSelected()) {
                    ps.setString(6, "Male");
                } else if (jCheckBoxFemale.isSelected()) {
                    ps.setString(6, "Female");
                } else {
                    ps.setString(6, "third gender");
                }
                ps.setString(7, jTextFieldPhone.getText());
                ps.setString(8, jTextFieldAddress.getText());
                ps.setString(9, jTextFieldEmail.getText());
                ps.setString(10, dateFormat.format(jDateChooserDayAtWork.getDate()));
                ps.executeUpdate();
                ConnectionDB.closeConnection(cnn);
                showDuLieu();
                JOptionPane.showMessageDialog(null, "Thêm nhân viên thành công!");
            } catch (SQLException ex) {
                Logger.getLogger(JPanelEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private boolean checkBirth() throws ParseException {
        Date birthDay = jDateChooserBirthday.getDate();
        Date dayAtWork = jDateChooserDayAtWork.getDate();

        LocalDate localDate1 = birthDay.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate localDate2 = dayAtWork.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        Period diff = Period.between(localDate1, localDate2);
        System.out.println("" + diff.getYears());
        if (diff.getYears() > 18) {
            return true;
        } else {
            return false;
        }
    }

}
