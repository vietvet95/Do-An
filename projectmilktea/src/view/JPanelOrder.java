/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ComboController;
import controller.ConnectionDB;
import controller.PromotionController;
import java.awt.Color;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Combo;
import model.Product;
import model.Promotion;
import util.AppUtil;

/**
 *
 * @author hoangviet
 */
public class JPanelOrder extends javax.swing.JPanel {

    /**
     * Creates new form JPanelOrder1
     *
     * @throws java.sql.SQLException
     * @throws java.lang.ClassNotFoundException
     */
    private List<Combo> listAllCombo;
    private String empIdOrder;
    private int sumOrder;

    public JPanelOrder(String empID) throws SQLException, ClassNotFoundException {
        empIdOrder = empID;
        initComponents();
        showDuLieuProductType();
        showDuLieuProduct();
        listAllCombo = ComboController.listAllCombo();
        showDuLieuCombo();
        jTableOrder.setRowHeight(30);
        jTableOrder.setShowGrid(true);//viền table
        jTableOrder.setGridColor(Color.gray);//màu viền table
        jTableOrder.setSelectionBackground(new Color(118, 93, 105));
        jTableProduct.setRowHeight(30);
        jTableProduct.setShowGrid(true);//viền table
        jTableProduct.setGridColor(Color.gray);//màu viền table
        jTableProduct.setSelectionBackground(new Color(118, 93, 105));

    }

    private void showDuLieuCombo() throws SQLException, ClassNotFoundException {
        jListCombo.removeAll();
        DefaultListModel<String> model = new DefaultListModel<>();
        for (Combo combo : listAllCombo) {
            model.addElement(combo.getComboName());
        }
        jListCombo.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOrder = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabelMoneyProduct = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabelSumMoney = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextFieldGiamGia = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jComboBoxSL = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableProduct = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListProductType = new javax.swing.JList();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListCombo = new javax.swing.JList();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane5.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
        );

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cancel_2.png"))); // NOI18N
        jButton5.setText("Hủy bỏ");
        jButton5.setBorder(new javax.swing.border.MatteBorder(null));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        jButton6.setText("Xuất hóa đơn");
        jButton6.setBorder(new javax.swing.border.MatteBorder(null));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jLabel1.setBackground(new java.awt.Color(104, 128, 173));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ORDER DETAILS");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setOpaque(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 255)));

        jTableOrder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTableOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "Số lượng", "Thành tiền"
            }
        ));
        jScrollPane1.setViewportView(jTableOrder);

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel2.setText("Tiền sản phẩm");

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel3.setText("Giảm giá");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel4.setText("Tiền khách đưa");

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel5.setText("Tiền thừa");

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel6.setText("Tổng tiền");

        jLabel8.setFont(new java.awt.Font("Calibri", 3, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/milktea.png"))); // NOI18N
        jLabel8.setText("Varus MILK TEA");
        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });

        jLabelMoneyProduct.setText("0");

        jLabel10.setText("0%");

        jLabel11.setText("0");

        jLabelSumMoney.setText("0");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/checked.png"))); // NOI18N
        jButton3.setText("Check");
        jButton3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setText("VND");

        jLabel12.setText("VND");

        jLabel13.setText("VND");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(56, 56, 56))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextFieldGiamGia, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                .addGap(18, 60, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                                .addComponent(jLabel10))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(jLabelSumMoney, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabelMoneyProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabelMoneyProduct)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel10)
                    .addComponent(jButton3)
                    .addComponent(jTextFieldGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabelSumMoney)
                    .addComponent(jLabel13))
                .addContainerGap(148, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 255)));

        jComboBoxSL.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add_order.png"))); // NOI18N
        jButton1.setText("Thêm");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cart_less.png"))); // NOI18N
        jButton2.setText("Giảm");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/x-mark.png"))); // NOI18N
        jButtonDelete.setText("Xóa");
        jButtonDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pay.png"))); // NOI18N
        jButton4.setText("Thanh toán");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxSL, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(219, 219, 219)
                .addComponent(jComboBoxSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 255)));

        jLabel7.setText("Tìm :");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jTableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableProduct);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jListProductType.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListProductType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListProductTypeMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jListProductType);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Chọn sản phẩm", jPanel5);

        jListCombo.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListComboMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jListCombo);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Combo", jPanel6);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jTabbedPane1)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void showDuLieuProductType() throws SQLException, ClassNotFoundException {
        jListProductType.removeAll();
        DefaultListModel<String> model = new DefaultListModel<>();
        String query = "select * from dbo.[productType]";
        Connection connection = ConnectionDB.getConnection();
        PreparedStatement ps = connection.prepareStatement(query);
        ResultSet rs = ps.executeQuery();
        while (rs.next()) {
            model.addElement(rs.getString("productTypeName"));
        }
        model.addElement("Hiển Thị Tất Cả");
        jListProductType.setModel(model);
    }

    private void showDuLieuProduct() {
        try {
            jTableProduct.removeAll();
            String[] arr = {"Tên", "Loại", "Số Lượng", "Giá"};
            DefaultTableModel model = new DefaultTableModel(arr, 0);
            String query = "select p.productName,t.productTypeName,p.amountRemaining,p.price from products p INNER JOIN productType t ON p.productTypeID=t.productTypeID";
            Connection connection = ConnectionDB.getConnection();
            PreparedStatement ps = connection.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString("productName"));
                vector.add(rs.getString("productTypeName"));
                vector.add(rs.getInt("amountRemaining"));
                vector.add(rs.getInt("price"));
                model.addRow(vector);
            }
            jTableProduct.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(JPanelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void showDuLieuProduct2(String valueSelected) {
        try {
            jTableProduct.removeAll();
            String[] arr = {"Tên", "Loại", "Số Lượng", "Giá"};
            DefaultTableModel model = new DefaultTableModel(arr, 0);
            String query = "select p.productName,t.productTypeName,p.amountRemaining,p.price from products p INNER JOIN productType t ON p.productTypeID=t.productTypeID WHERE t.productTypeID=?";
            Connection connection = ConnectionDB.getConnection();
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, valueSelected);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString("productName"));
                vector.add(rs.getString("productTypeName"));
                vector.add(rs.getInt("amountRemaining"));
                vector.add(rs.getInt("price"));
                model.addRow(vector);
            }
            jTableProduct.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(JPanelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void showDuLieuComboClick(String valueSelected) {
        try {
            jTableProduct.removeAll();
            String[] arr = {"Tên", "Số Lượng", "Giá", "Giảm Giá"};
            DefaultTableModel model = new DefaultTableModel(arr, 0);
            String query = "select p.productName,c.amountProduct,p.price,c.discountCombo\n"
                    + "	   from products p INNER JOIN Combo c ON p.productID=c.productID WHERE c.ComboName = ?";
            Connection connection = ConnectionDB.getConnection();
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, valueSelected);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString("productName"));
                vector.add(rs.getString("amountProduct"));
                vector.add(rs.getInt("price"));
                vector.add(rs.getFloat("discountCombo"));
                model.addRow(vector);
            }
            jTableProduct.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(JPanelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String tenCB = (String) jListCombo.getSelectedValue();
        String soLuong = (String) jComboBoxSL.getSelectedItem();
        int result = Integer.parseInt(soLuong);
        String comboName = (String) jListCombo.getSelectedValue();
        int i = jTableProduct.getSelectedRow();
        int sumRow = jTableOrder.getRowCount();
        String valueCol = (String) jTableProduct.getColumnName(3);
        int sumRowProduct = jTableProduct.getRowCount();
        DefaultTableModel modelOrder = (DefaultTableModel) jTableOrder.getModel();
        if (valueCol.equals("Giảm Giá")) {
            int priceCom = 0;
            for (Combo combo : listAllCombo) {
                if (comboName.equals(combo.getComboName())) {
                    priceCom = combo.getComboPrice();
                }
            }
            int position = -1;

            for (int h = 0; h < sumRow; h++) {
                String nameOrder = jTableOrder.getValueAt(h, 0).toString();
                if (nameOrder.equals(tenCB)) {
                    position = h;
                }
            }
            if (position >= 0) {
                String slOrder = jTableOrder.getValueAt(position, 1).toString();
                int sl = Integer.parseInt(slOrder);
                int sum = sl + result;
                jTableOrder.setValueAt(sum, position, 1);

                int result4 = sum * priceCom;
                jTableOrder.setValueAt(result4, position, 2);
            } else {
                modelOrder.addRow(new Object[]{comboName, soLuong, priceCom});
            }

        } else if (i == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm!");
        } else {
            TableModel model = jTableProduct.getModel();
            String k = model.getValueAt(i, 3).toString();
            int result2 = Integer.parseInt(k);
            int result3 = result2 * result;
            String nameProduct = model.getValueAt(i, 0).toString();

            int position = -1;

            for (int h = 0; h < sumRow; h++) {
                String nameOrder = jTableOrder.getValueAt(h, 0).toString();
                if (nameOrder.equals(nameProduct)) {
                    position = h;
                }
            }
            if (position >= 0) {
                String slOrder = jTableOrder.getValueAt(position, 1).toString();
                int sl = Integer.parseInt(slOrder);
                int sum = sl + result;
                jTableOrder.setValueAt(sum, position, 1);
                int result4 = sum * result2;
                jTableOrder.setValueAt(result4, position, 2);
            } else {
                modelOrder.addRow(new Object[]{model.getValueAt(i, 0).toString(), result, result3});
            }
        }
        //tinh tong tien phai thanh toan
        jTableOrder.removeAll();
        int row = jTableOrder.getRowCount();
        int sum = 0;
        for (int count = 0; count < row; count++) {
            int value = (int) jTableOrder.getValueAt(count, 2);
            sum += value;
        }
        sumOrder = sum;
        jLabelMoneyProduct.setText(String.valueOf(sum));
        jLabelSumMoney.setText(String.valueOf(sum));

    }//GEN-LAST:event_jButton1ActionPerformed
    private void nameChung(int position, int result) {
        String slOrder = jTableOrder.getValueAt(position, 1).toString();
        int sl = Integer.parseInt(slOrder);
        int sum = sl + result;
        jTableOrder.setValueAt(sum, position, 1);
    }
    private void jListProductTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListProductTypeMouseClicked
        // TODO add your handling code here:
        String i = (String) jListProductType.getSelectedValue();
        if (i.equals("Trà sữa")) {
            showDuLieuProduct2("PT01");
        } else if (i.equals("Ăn vặt")) {
            showDuLieuProduct2("PT02");
        } else if (i.equals("Sữa tươi")) {
            showDuLieuProduct2("PT03");
        } else {
            showDuLieuProduct();
        }
    }//GEN-LAST:event_jListProductTypeMouseClicked

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        int row1 = jTableOrder.getSelectedRow();
        if (row1 == -1) {
            JOptionPane.showMessageDialog(null, "Chọn sản phẩm cần xóa!");
        } else {
            ((DefaultTableModel) jTableOrder.getModel()).removeRow(row1);
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jListComboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListComboMouseClicked
        // TODO add your handling code here:
        String i = (String) jListCombo.getSelectedValue();
        showDuLieuComboClick(i);
    }//GEN-LAST:event_jListComboMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText("");
        jDialog1.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String orderId = AppUtil.setOrderIDByDate();
        try {
            int i = jTableOrder.getRowCount();
            Connection cnn = ConnectionDB.getConnection();
            String query = "INSERT INTO Orders (OrderID,EmpID,OrderDay,TotalPrice) VALUES(?,?,GETDATE(),?)";
            PreparedStatement ps = cnn.prepareStatement(query);
            ps.setString(1, orderId);
            ps.setString(2, empIdOrder);
            ps.setString(3, jLabelSumMoney.getText());
            ps.executeUpdate();
            ps.close();

            for (int j = 0; j < i; j++) {
                String query1 = "INSERT INTO OrderDetails(productID,OrderID,amount,ProductPromotionID,comboID) VALUES(?,?,?,?,?)";
                PreparedStatement ps1 = cnn.prepareStatement(query1);
                ps1.setString(1, layProductID(jTableOrder.getValueAt(j, 0).toString()));
                ps1.setString(2, orderId);
                ps1.setInt(3, Integer.parseInt(jTableOrder.getValueAt(j, 1).toString()));
                String promotionID = jTextFieldGiamGia.getText();
                List<Promotion> promotionList = PromotionController.listPromotion();
                String promotionIdCheck = "";
                for (Promotion p : promotionList) {
                    if (promotionID.equals(p.getPromotionID())) {
                        promotionIdCheck = promotionID;
                    }
                }
                if (promotionIdCheck.equals("")) {
                    ps1.setString(4, "Không");
                } else {
                    ps1.setString(4, promotionIdCheck);
                }
                ps1.setString(5, layComboID(jTableOrder.getValueAt(j, 0).toString()));
                ps1.executeUpdate();
            }
            ConnectionDB.closeConnection(cnn);
            JOptionPane.showMessageDialog(null, "Thanh toán thành công!");
            String printData = jTextArea1.getText();
            PrinterJob job = PrinterJob.getPrinterJob();
            boolean doPrint = job.printDialog();
            if (doPrint) {
                try {
                    job.print();
                } catch (PrinterException e) {
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(JPanelOrder.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Thanh toán không thành công,xin vui lòng thử lại!");
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jDialog1.setSize(500, 400);
        jDialog1.setAlwaysOnTop(false);
        jDialog1.setVisible(true);

        int row = jTableOrder.getRowCount();

        jTextArea1.append("\t Varus Milktea \n" + "Địa chỉ: abc,Hòa Khánh,Liên Chiểu, Đà Nẵng\n" + "");
        jTextArea1.append("********************************************************************************************\n");
        jTextArea1.append("Tên\t\t" + "SL\t" + "Giá\n");
        jTextArea1.append("--------------------------------------------------------------------------------------------------\n");
        String sum = jLabelSumMoney.getText();
        for (int i = 0; i < row; i++) {
            String sp = (String) jTableOrder.getValueAt(i, 0);
            int sl = Integer.parseInt(jTableOrder.getValueAt(i, 1).toString());
            int gia = Integer.parseInt(jTableOrder.getValueAt(i, 2).toString());
            //sum += gia;
            jTextArea1.append(sp + "\t" + sl + "\t" + gia + "\n");
        }
        jTextArea1.append("Ngày : " + AppUtil.format(new Date()) + "Giờ : " + AppUtil.formatTime(new Date()) + "\n");
        jTextArea1.append("********************************************************************************************\n");
        jTextArea1.append("Giảm giá: \t\t\t " + jLabel10.getText() + "\n");
        jTextArea1.append("Tổng tiền thanh toán:\t\t" + sum + "\n");
        jTextArea1.append("------------------------------------------------------------------------------------------------\n");
        jTextArea1.append("--------------------------------XIN CẢM ƠN QUÝ KHÁCH---------------------------------------\n");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (checkMaGiamGia() == false) {
            JOptionPane.showMessageDialog(null, "Mã giảm giá không đúng!");
            jTextFieldGiamGia.setText("");
            jLabelSumMoney.setText(sumOrder + "");
        } else {
            try {
                Connection cnn = ConnectionDB.getConnection();
                String query = "SELECT discount FROM ProductPromotion WHERE ProductPromotionID = ?";
                PreparedStatement ps = cnn.prepareStatement(query);
                ps.setString(1, jTextFieldGiamGia.getText());
                ResultSet rs = ps.executeQuery();
                float discount = 0f;
                while (rs.next()) {
                    jLabel10.setText(rs.getString("discount"));
                    discount = Float.parseFloat(rs.getString("discount"));
                }
                jLabelSumMoney.setText(sumOrder * (1 - discount) + "");
            } catch (SQLException ex) {
                Logger.getLogger(JPanelOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:
        String tiennhan = jTextField2.getText();
        String tientt = jLabelSumMoney.getText();
        try {
            int tn = (int) Integer.parseInt(tiennhan);
            int tt = (int) Integer.parseInt(tientt);
            if (tiennhan.equals("")) {
                jLabel11.setText("0");
            } else if (tn < tt) {
                jLabel11.setText("0");
            } else {
                jLabel11.setText(String.valueOf(tn - tt));
            }
        } catch (Exception e) {

        }

    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        jTableProduct.setModel(new DefaultTableModel(null, new Object[]{"Tên", "Loại", "Số Lượng", "Giá"}));
        findProduct(jTableProduct, jTextField1.getText());
    }//GEN-LAST:event_jTextField1KeyReleased

    private void TruSLProduct(int value) {
        int i = jTableOrder.getSelectedRow();
        String tenSP1 = jTableOrder.getValueAt(i, 0).toString();
        int rowP = jTableProduct.getRowCount();
        int tongSL = Integer.parseInt(jTableProduct.getValueAt(i, 2).toString());
        for (int j = 0; j < rowP; j++) {
            String tenSP2 = jTableProduct.getValueAt(j, 0).toString();
            if (tenSP2.equals(tenSP1)) {
                jTableProduct.setValueAt(tongSL + value, j, 2);
            }
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int i = jTableOrder.getSelectedRow();
        //TableModel model = jTableOrder.getModel();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "Hãy chọn sản phẩm cần giảm!");
        } else {
            int j = (int) jTableOrder.getValueAt(i, 1);
            String k = (String) jComboBoxSL.getSelectedItem();
            int result = Integer.parseInt(k);
            int gia = (int) jTableOrder.getValueAt(i, 2);
            int sl = (int) jTableOrder.getValueAt(i, 1);
            int giathat = gia / sl;
            if (j == 1) {
                ((DefaultTableModel) jTableOrder.getModel()).removeRow(i);
                jLabelMoneyProduct.setText("0");
                jLabelSumMoney.setText("0");
            } else if (result >= j) {
                ((DefaultTableModel) jTableOrder.getModel()).removeRow(i);
                jLabelMoneyProduct.setText("0");
                jLabelSumMoney.setText("0");
            } else {
                jTableOrder.setValueAt(j - result, i, 1);
                jTableOrder.setValueAt(gia - (giathat * result), i, 2);
                jTableOrder.removeAll();
                int row = jTableOrder.getRowCount();
                int sum = 0;
                for (int count = 0; count < row; count++) {
                    int value = (int) jTableOrder.getValueAt(count, 2);
                    sum += value;
                }
                sumOrder = sum;
                jLabelMoneyProduct.setText(String.valueOf(sum));
                jLabelSumMoney.setText(String.valueOf(sum));
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    private boolean checkMaGiamGia() {
        try {
            Connection cnn = ConnectionDB.getConnection();
            String query = "SELECT * FROM ProductPromotion WHERE ProductPromotionID = ?";
            PreparedStatement ps = cnn.prepareStatement(query);
            ps.setString(1, jTextFieldGiamGia.getText());
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                return true;
            }
            ConnectionDB.closeConnection(cnn);
        } catch (SQLException ex) {
            Logger.getLogger(JPanelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    private void findProduct(JTable table, String valueToSearch) {
        try {
            Connection con = ConnectionDB.getConnection();
            PreparedStatement ps;
            ps = con.prepareStatement("select p.productName,t.productTypeName,p.amountRemaining,"
                    + "p.price from products p INNER JOIN productType t "
                    + "ON p.productTypeID=t.productTypeID where p.productName like ?");
            ps.setString(1, "%" + valueToSearch + "%");
            ResultSet rs = ps.executeQuery();
            DefaultTableModel model = (DefaultTableModel) table.getModel();

            Object[] row;

            while (rs.next()) {
                row = new Object[4];
                row[0] = rs.getString(1);
                row[1] = rs.getString(2);
                row[2] = rs.getInt(3);
                row[3] = rs.getInt(4);

                model.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(JPanelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String layProductID(String value) {
        String id = "";
        try {
            Connection cnn = ConnectionDB.getConnection();
            String query = "SELECT productID FROM products WHERE productName = ? ";
            PreparedStatement ps = cnn.prepareStatement(query);
            ps.setString(1, value);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                id = rs.getString("productID");
            }
        } catch (SQLException ex) {
            Logger.getLogger(JPanelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id;
    }

    private String layComboID(String value) {
        String id = "";
        try {
            Connection cnn = ConnectionDB.getConnection();
            String query = "SELECT ComboID FROM Combo WHERE ComboName = ? ";
            PreparedStatement ps = cnn.prepareStatement(query);
            ps.setString(1, value);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                id = rs.getString("ComboID");
            }
        } catch (SQLException ex) {
            Logger.getLogger(JPanelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JComboBox jComboBoxSL;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelMoneyProduct;
    private javax.swing.JLabel jLabelSumMoney;
    private javax.swing.JList jListCombo;
    private javax.swing.JList jListProductType;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableOrder;
    private javax.swing.JTable jTableProduct;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextFieldGiamGia;
    // End of variables declaration//GEN-END:variables
}
