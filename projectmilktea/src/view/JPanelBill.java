/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ConnectionDB;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import util.AppUtil;

/**
 *
 * @author vinhhuy
 */
public class JPanelBill extends javax.swing.JPanel {

    /**
     * Creates new form JPanelBill
     */
    public JPanelBill() throws ParseException {
        initComponents();
        showDuLieu1();
        setViewTable(jTable1);
        setViewTable(jTable2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jDateChooserOrder = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã hóa đơn", "Ngày bán"
            }
        ));
        jTable1.setToolTipText("");
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getAccessibleContext().setAccessibleName("áddsfsd");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Mã combo", "Khuyến mãi", "Số lượng", "Ngày bán"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("QUẢN LÝ ĐƠN HÀNG");

        jButton1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/checked.png"))); // NOI18N
        jButton1.setText("Check");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDateChooserOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooserOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        String value = jTable1.getValueAt(i, 0).toString();
        showDuLieu2(value);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            String[] arr = {"Mã hóa đơn", "Ngày bán", "Giờ", "Tổng tiền", "Mã nhân viên"};
            DefaultTableModel model = new DefaultTableModel(arr, 0);
            Date dateChoose = jDateChooserOrder.getDate();
            String dateFormat = AppUtil.format(dateChoose);
            System.out.println(""+dateFormat);
            String query = "select OrderID,OrderDay,TotalPrice,empID from Orders WHERE OrderDay BETWEEN ? AND ?";
            Connection connection = ConnectionDB.getConnection();
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, dateFormat + " 00:00:00");
            ps.setString(2, dateFormat + " 23:59:59");
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString("OrderID"));
                String date = rs.getString("OrderDay");
                System.out.println("" + date);
                Date d = AppUtil.formatStringTime(date);
                String dayorder = AppUtil.format(d);
                String timeOrder = AppUtil.formatTime(d);
                vector.add(dayorder);
                vector.add(timeOrder);
                vector.add(rs.getString("TotalPrice"));
                vector.add(rs.getString("empID"));
                model.addRow(vector);
            }
            jTable1.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(JPanelBill.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(JPanelBill.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    private void setViewTable(JTable jTable) {
        jTable.setRowHeight(30);
        jTable.setShowGrid(true);//viền table
        jTable.setGridColor(Color.gray);//màu viền table
        jTable.setSelectionBackground(new Color(118, 93, 105));
    }

    private void showDuLieu1() throws ParseException {
        try {
            jTable1.removeAll();
            String[] arr = {"Mã hóa đơn", "Ngày bán", "Giờ", "Tổng tiền", "Mã nhân viên"};
            DefaultTableModel model = new DefaultTableModel(arr, 0);
            String query = "select o.OrderID,o.OrderDay,o.TotalPrice,o.empID from Orders o";
            Connection connection = ConnectionDB.getConnection();
            PreparedStatement ps = connection.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString("OrderID"));
                String date = rs.getString("OrderDay");
                System.out.println("" + date);
                Date d = AppUtil.formatStringTime(date);
                String dayorder = AppUtil.format(d);
                String timeOrder = AppUtil.formatTime(d);
                vector.add(dayorder);
                vector.add(timeOrder);
                vector.add(rs.getString("TotalPrice"));
                vector.add(rs.getString("empID"));
                model.addRow(vector);
            }
            jTable1.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(JPanelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void showDuLieu2(String valueSelected) {
        try {
            jTable2.removeAll();
            String[] arr = {"Mã Sản phẩm", "Mã Combo", "Khuyến mãi", "Số Lượng"};
            DefaultTableModel model = new DefaultTableModel(arr, 0);
            String query = "select od.amount, od.productID,od.ProductPromotionID,o.OrderDay,o.EmpID,od.ComboID from OrderDetails od join Orders o \n"
                    + " on o.OrderID=od.OrderID WHERE od.OrderID = ?";
            Connection connection = ConnectionDB.getConnection();
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, valueSelected);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector vector = new Vector();
                vector.add(rs.getString("productID"));
                vector.add(rs.getString("ComboID"));
                vector.add(rs.getString("ProductPromotionID"));
                vector.add(rs.getInt("amount"));
                model.addRow(vector);
            }
            jTable2.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(JPanelOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooserOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
